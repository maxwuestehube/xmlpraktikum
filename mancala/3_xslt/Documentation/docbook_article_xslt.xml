<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://docbook.org/xml/4.5/docbookx.dtd">
<article>
    <title>XML-Technologien, Übungsblatt 4: XQuery - Mancala-Spielbrett</title>
    <sect1>
        <title>Klassendiagramm</title>
        <para>Das Klassendiagramm aus Übungsblatt 3 wurde in Übungsblatt 4 um folgende Methoden
            erweitert.</para>
        <para>Die Klasse MancalaGame wurde zunächst um die Methoden getPlayerOnTurn(),
            makeMove(houseIndex), resetGame() und switchPlayerOnTurn(player:Player)
            erweitert.</para>
        <para>Zu der Klasse Player wurden die Methoden getName(), getSeedCount(), getWinCount(),
            increaseWinCount() und resetWinCount() hinzugefügt.</para>
        <para>Bei den beiden Klassen Kalaha und House wurden jeweils die Methoden getSeedCount(),
            incSeedCount(amount:int) und setSeedCount(amount:int) ergänzt. </para>
        <para>Die Klasse PlayersHalf blieb unverändert.</para>
        <para> </para>
    </sect1>
    <sect1>
        <title>Umsetzung in XQuery</title>
        <para>Für die Umsetzung der Methoden, die im Klassendiagramm ergänzt wurden, wurde eine
            XQuery Datei "MancalaGame" erstellt.</para>
        <para>Beginnend mit der Klasse House erfolgt die Umsetzung. In der Methode
            getPlayerIndexByHouseIndex() wird der Index des Players mit Hilfe des House Index
            ermittelt. In getSeedCount() wird die aktuelle Anzahl der Samen ermittelt, die in dem
            House des Players vorliegen, um mit der Methode increaseSeedCount() die Anzahl der Samen
            zu erhöhen. Mit der Methode setSeedCount() wird die aktuelle Anzahl der Samen gesetzt,
            wohin gegen die Anzahl der Samen mit der Funktion resetSeedCount() zurückgesetzt werden
            kann. </para>
        <para>Die gleiche Vorgehensweise und Implementierung erfolgt auch für die Kalaha der
            jeweiligen Spieler.</para>
        <para>In der Klasse MancalaGame wird die Methode getPlayerOnTurn() implementiert, um den
            Player zu bestimmen, der am Zug ist. Die rekursive Methode moveSeeds() verteilt die
            Anzahl gegebener Samen beginnend bei dem Haus des aktuellen Players mit Hilfe der
            makeMove() Methode. Die Aktualisierung der Samen in den jeweiligen Häusern der Spieler
            wird mit der Methode updateHouseAfterMovingSeeds() aktualisiert. Das Update der Anzahl
            der Samen der jeweiligen Kalaha erfolgt mit der Methode updateKalahAfterMovingSeeds(). </para>
        <para>Die Angabe des aktuellen Spielers erfolgt über die Methode switchPlayerOnTurn(). Der
            Name des Spielers sowie der Index mit Hilfe des Namen wird über die Funktionen getName()
            und getIndexByName() realisiert.</para>
        <para>Die reset Methoden der Klasse MancalaGame setzen z.B die Gewinnanzahl des jeweiligen
            Spielers zurück auf 0, die Anzahl der Samen der Häuser und der Kalaha zurück oder auch
            das aktuelle Spiel, das von beiden Spielern aktuelle gespielt wird.</para>
    </sect1>
</article>
